import sys
sys.stdin = open('sample_input.txt', 'r')

'''
세 개의 상자
사탕 A, B, C >> 순증가
A < B < C
빈상자X == 1개 이상
3번째 상자는 거의 손대지 않음
조건 만족을 위해서 사탕을 먹기(0개 이상)
조건 만족하는 지 판단, 만족할 때 최소 몇개의 사탕을 먹는지 출력

- 두번째 상자
    - 세번째 상자보다 작게
    - 하나씩 먹기(?)
- 첫번째 상자
    - 두번째 상자보다 작게
    
-------------------문제 읽기
-------------------설계
- 자료구조
    - 3개의 숫자 + 먹은 개수 저장
    - 리스트 vs A, B, C
- 알고리즘
    - 불가능 케이스
        111
        122 
        B는 1보다 커야 함
        C는 2보다 커야 함
    - B는 C보다 작아야 함
    - B를 C보다 작을 때까지 하나씩 감소
        - [검증]**시간**과 공간 1초당 3천만번/O(N) 사탕의 개수가 많으면 시간초과 될 수 있음
        - 사탕은 3000까지여서 가능함  
    - B가 C보다 클 때, B = C -1 로 만들어준다.
'''
T = int(input())
for tc in range(1, T+1):
    #변수 3개 뿐이라 리스트 쓰지 않음
    A, B, C = map(int, input().split())

    #불가능을 먼저 없앤다
    if B < 2 or C < 3:
        print(f'#{tc} -1')
        continue

    #사탕 카운트
    eat_cnt = 0
    # B >= C
    if B >= C:
        eat_cnt += B - (C - 1)
        B = C - 1

    # A >= B
    if A >= B:
        eat_cnt += A - (B - 1)
        A = B - 1

    print(f'#{tc} {eat_cnt}')